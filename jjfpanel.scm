
(import chicken scheme extras foreign)

(use miscmacros
     srfi-4  ;; homogeneous numeric vector datatypes
     srfi-69 ;; hash tables
     lolevel
     posix
     xlib)

(define syms (make-hash-table))
(hash-table-set! syms ABOVE "ABOVE")
(hash-table-set! syms ALLHINTS "ALLHINTS")
(hash-table-set! syms ALLOCALL "ALLOCALL")
(hash-table-set! syms ALLOCNONE "ALLOCNONE")
(hash-table-set! syms ALLOWEXPOSURES "ALLOWEXPOSURES")
(hash-table-set! syms ALLPLANES "ALLPLANES")
(hash-table-set! syms ALLTEMPORARY "ALLTEMPORARY")
(hash-table-set! syms ALLVALUES "ALLVALUES")
(hash-table-set! syms ALREADYGRABBED "ALREADYGRABBED")
(hash-table-set! syms ALWAYS "ALWAYS")
(hash-table-set! syms ANYBUTTON "ANYBUTTON")
(hash-table-set! syms ANYKEY "ANYKEY")
(hash-table-set! syms ANYMODIFIER "ANYMODIFIER")
(hash-table-set! syms ANYPROPERTYTYPE "ANYPROPERTYTYPE")
(hash-table-set! syms ARCCHORD "ARCCHORD")
(hash-table-set! syms ARCPIESLICE "ARCPIESLICE")
(hash-table-set! syms ASYNCBOTH "ASYNCBOTH")
(hash-table-set! syms ASYNCKEYBOARD "ASYNCKEYBOARD")
(hash-table-set! syms ASYNCPOINTER "ASYNCPOINTER")
(hash-table-set! syms AUTOREPEATMODEDEFAULT "AUTOREPEATMODEDEFAULT")
(hash-table-set! syms AUTOREPEATMODEOFF "AUTOREPEATMODEOFF")
(hash-table-set! syms AUTOREPEATMODEON "AUTOREPEATMODEON")
(hash-table-set! syms BADACCESS "BADACCESS")
(hash-table-set! syms BADALLOC "BADALLOC")
(hash-table-set! syms BADATOM "BADATOM")
(hash-table-set! syms BADCOLOR "BADCOLOR")
(hash-table-set! syms BADCURSOR "BADCURSOR")
(hash-table-set! syms BADDRAWABLE "BADDRAWABLE")
(hash-table-set! syms BADFONT "BADFONT")
(hash-table-set! syms BADGC "BADGC")
(hash-table-set! syms BADIDCHOICE "BADIDCHOICE")
(hash-table-set! syms BADIMPLEMENTATION "BADIMPLEMENTATION")
(hash-table-set! syms BADLENGTH "BADLENGTH")
(hash-table-set! syms BADMATCH "BADMATCH")
(hash-table-set! syms BADNAME "BADNAME")
(hash-table-set! syms BADPIXMAP "BADPIXMAP")
(hash-table-set! syms BADREQUEST "BADREQUEST")
(hash-table-set! syms BADVALUE "BADVALUE")
(hash-table-set! syms BADWINDOW "BADWINDOW")
(hash-table-set! syms BELOW "BELOW")
(hash-table-set! syms BITMAPFILEINVALID "BITMAPFILEINVALID")
(hash-table-set! syms BITMAPNOMEMORY "BITMAPNOMEMORY")
(hash-table-set! syms BITMAPOPENFAILED "BITMAPOPENFAILED")
(hash-table-set! syms BITMAPSUCCESS "BITMAPSUCCESS")
(hash-table-set! syms BOTTOMIF "BOTTOMIF")
(hash-table-set! syms BUTTON1 "BUTTON1")
(hash-table-set! syms BUTTON1MASK "BUTTON1MASK")
(hash-table-set! syms BUTTON1MOTIONMASK "BUTTON1MOTIONMASK")
(hash-table-set! syms BUTTON2 "BUTTON2")
(hash-table-set! syms BUTTON2MASK "BUTTON2MASK")
(hash-table-set! syms BUTTON2MOTIONMASK "BUTTON2MOTIONMASK")
(hash-table-set! syms BUTTON3 "BUTTON3")
(hash-table-set! syms BUTTON3MASK "BUTTON3MASK")
(hash-table-set! syms BUTTON3MOTIONMASK "BUTTON3MOTIONMASK")
(hash-table-set! syms BUTTON4 "BUTTON4")
(hash-table-set! syms BUTTON4MASK "BUTTON4MASK")
(hash-table-set! syms BUTTON4MOTIONMASK "BUTTON4MOTIONMASK")
(hash-table-set! syms BUTTON5 "BUTTON5")
(hash-table-set! syms BUTTON5MASK "BUTTON5MASK")
(hash-table-set! syms BUTTON5MOTIONMASK "BUTTON5MOTIONMASK")
(hash-table-set! syms BUTTONMOTIONMASK "BUTTONMOTIONMASK")
(hash-table-set! syms BUTTONPRESS "BUTTONPRESS")
(hash-table-set! syms BUTTONPRESSMASK "BUTTONPRESSMASK")
(hash-table-set! syms BUTTONRELEASE "BUTTONRELEASE")
(hash-table-set! syms BUTTONRELEASEMASK "BUTTONRELEASEMASK")
(hash-table-set! syms CAPBUTT "CAPBUTT")
(hash-table-set! syms CAPNOTLAST "CAPNOTLAST")
(hash-table-set! syms CAPPROJECTING "CAPPROJECTING")
(hash-table-set! syms CAPROUND "CAPROUND")
(hash-table-set! syms CENTERGRAVITY "CENTERGRAVITY")
(hash-table-set! syms CIRCULATENOTIFY "CIRCULATENOTIFY")
(hash-table-set! syms CIRCULATEREQUEST "CIRCULATEREQUEST")
(hash-table-set! syms CLIENTMESSAGE "CLIENTMESSAGE")
(hash-table-set! syms CLIPBYCHILDREN "CLIPBYCHILDREN")
(hash-table-set! syms COLORMAPCHANGEMASK "COLORMAPCHANGEMASK")
(hash-table-set! syms COLORMAPINSTALLED "COLORMAPINSTALLED")
(hash-table-set! syms COLORMAPNOTIFY "COLORMAPNOTIFY")
(hash-table-set! syms COLORMAPUNINSTALLED "COLORMAPUNINSTALLED")
(hash-table-set! syms COMPLEX "COMPLEX")
(hash-table-set! syms CONFIGURENOTIFY "CONFIGURENOTIFY")
(hash-table-set! syms CONFIGUREREQUEST "CONFIGUREREQUEST")
(hash-table-set! syms CONTROLMAPINDEX "CONTROLMAPINDEX")
(hash-table-set! syms CONTROLMASK "CONTROLMASK")
(hash-table-set! syms CONVEX "CONVEX")
(hash-table-set! syms COORDMODEORIGIN "COORDMODEORIGIN")
(hash-table-set! syms COORDMODEPREVIOUS "COORDMODEPREVIOUS")
(hash-table-set! syms COPYFROMPARENT "COPYFROMPARENT")
(hash-table-set! syms CREATENOTIFY "CREATENOTIFY")
(hash-table-set! syms CURRENTTIME "CURRENTTIME")
(hash-table-set! syms CURSORSHAPE "CURSORSHAPE")
(hash-table-set! syms CWBACKINGPIXEL "CWBACKINGPIXEL")
(hash-table-set! syms CWBACKINGPLANES "CWBACKINGPLANES")
(hash-table-set! syms CWBACKINGSTORE "CWBACKINGSTORE")
(hash-table-set! syms CWBACKPIXEL "CWBACKPIXEL")
(hash-table-set! syms CWBACKPIXMAP "CWBACKPIXMAP")
(hash-table-set! syms CWBITGRAVITY "CWBITGRAVITY")
(hash-table-set! syms CWBORDERPIXEL "CWBORDERPIXEL")
(hash-table-set! syms CWBORDERPIXMAP "CWBORDERPIXMAP")
(hash-table-set! syms CWBORDERWIDTH "CWBORDERWIDTH")
(hash-table-set! syms CWCOLORMAP "CWCOLORMAP")
(hash-table-set! syms CWCURSOR "CWCURSOR")
(hash-table-set! syms CWDONTPROPAGATE "CWDONTPROPAGATE")
(hash-table-set! syms CWEVENTMASK "CWEVENTMASK")
(hash-table-set! syms CWHEIGHT "CWHEIGHT")
(hash-table-set! syms CWOVERRIDEREDIRECT "CWOVERRIDEREDIRECT")
(hash-table-set! syms CWSAVEUNDER "CWSAVEUNDER")
(hash-table-set! syms CWSIBLING "CWSIBLING")
(hash-table-set! syms CWSTACKMODE "CWSTACKMODE")
(hash-table-set! syms CWWIDTH "CWWIDTH")
(hash-table-set! syms CWWINGRAVITY "CWWINGRAVITY")
(hash-table-set! syms CWX "CWX")
(hash-table-set! syms CWY "CWY")
(hash-table-set! syms DEFAULTBLANKING "DEFAULTBLANKING")
(hash-table-set! syms DEFAULTEXPOSURES "DEFAULTEXPOSURES")
(hash-table-set! syms DESTROYALL "DESTROYALL")
(hash-table-set! syms DESTROYNOTIFY "DESTROYNOTIFY")
(hash-table-set! syms DIRECTCOLOR "DIRECTCOLOR")
(hash-table-set! syms DISABLEACCESS "DISABLEACCESS")
(hash-table-set! syms DISABLESCREENINTERVAL "DISABLESCREENINTERVAL")
(hash-table-set! syms DISABLESCREENSAVER "DISABLESCREENSAVER")
(hash-table-set! syms DOBLUE "DOBLUE")
(hash-table-set! syms DOGREEN "DOGREEN")
(hash-table-set! syms DONTALLOWEXPOSURES "DONTALLOWEXPOSURES")
(hash-table-set! syms DONTCARESTATE "DONTCARESTATE")
(hash-table-set! syms DONTPREFERBLANKING "DONTPREFERBLANKING")
(hash-table-set! syms DORED "DORED")
(hash-table-set! syms EASTGRAVITY "EASTGRAVITY")
(hash-table-set! syms ENABLEACCESS "ENABLEACCESS")
(hash-table-set! syms ENTERNOTIFY "ENTERNOTIFY")
(hash-table-set! syms ENTERWINDOWMASK "ENTERWINDOWMASK")
(hash-table-set! syms EVENODDRULE "EVENODDRULE")
(hash-table-set! syms EXPOSE "EXPOSE")
(hash-table-set! syms EXPOSUREMASK "EXPOSUREMASK")
(hash-table-set! syms FAMILYCHAOS "FAMILYCHAOS")
(hash-table-set! syms FAMILYDECNET "FAMILYDECNET")
(hash-table-set! syms FAMILYINTERNET "FAMILYINTERNET")
(hash-table-set! syms FILLOPAQUESTIPPLED "FILLOPAQUESTIPPLED")
(hash-table-set! syms FILLSOLID "FILLSOLID")
(hash-table-set! syms FILLSTIPPLED "FILLSTIPPLED")
(hash-table-set! syms FILLTILED "FILLTILED")
(hash-table-set! syms FIRSTEXTENSIONERROR "FIRSTEXTENSIONERROR")
(hash-table-set! syms FOCUSCHANGEMASK "FOCUSCHANGEMASK")
(hash-table-set! syms FOCUSIN "FOCUSIN")
(hash-table-set! syms FOCUSOUT "FOCUSOUT")
(hash-table-set! syms FONTCHANGE "FONTCHANGE")
(hash-table-set! syms FONTLEFTTORIGHT "FONTLEFTTORIGHT")
(hash-table-set! syms FONTRIGHTTOLEFT "FONTRIGHTTOLEFT")
(hash-table-set! syms FORGETGRAVITY "FORGETGRAVITY")
(hash-table-set! syms GCARCMODE "GCARCMODE")
(hash-table-set! syms GCBACKGROUND "GCBACKGROUND")
(hash-table-set! syms GCCAPSTYLE "GCCAPSTYLE")
(hash-table-set! syms GCCLIPMASK "GCCLIPMASK")
(hash-table-set! syms GCCLIPXORIGIN "GCCLIPXORIGIN")
(hash-table-set! syms GCCLIPYORIGIN "GCCLIPYORIGIN")
(hash-table-set! syms GCDASHLIST "GCDASHLIST")
(hash-table-set! syms GCDASHOFFSET "GCDASHOFFSET")
(hash-table-set! syms GCFILLRULE "GCFILLRULE")
(hash-table-set! syms GCFILLSTYLE "GCFILLSTYLE")
(hash-table-set! syms GCFONT "GCFONT")
(hash-table-set! syms GCFOREGROUND "GCFOREGROUND")
(hash-table-set! syms GCFUNCTION "GCFUNCTION")
(hash-table-set! syms GCGRAPHICSEXPOSURES "GCGRAPHICSEXPOSURES")
(hash-table-set! syms GCJOINSTYLE "GCJOINSTYLE")
(hash-table-set! syms GCLASTBIT "GCLASTBIT")
(hash-table-set! syms GCLINESTYLE "GCLINESTYLE")
(hash-table-set! syms GCLINEWIDTH "GCLINEWIDTH")
(hash-table-set! syms GCPLANEMASK "GCPLANEMASK")
(hash-table-set! syms GCSTIPPLE "GCSTIPPLE")
(hash-table-set! syms GCSUBWINDOWMODE "GCSUBWINDOWMODE")
(hash-table-set! syms GCTILE "GCTILE")
(hash-table-set! syms GCTILESTIPXORIGIN "GCTILESTIPXORIGIN")
(hash-table-set! syms GCTILESTIPYORIGIN "GCTILESTIPYORIGIN")
(hash-table-set! syms GRABFROZEN "GRABFROZEN")
(hash-table-set! syms GRABINVALIDTIME "GRABINVALIDTIME")
(hash-table-set! syms GRABMODEASYNC "GRABMODEASYNC")
(hash-table-set! syms GRABMODESYNC "GRABMODESYNC")
(hash-table-set! syms GRABNOTVIEWABLE "GRABNOTVIEWABLE")
(hash-table-set! syms GRABSUCCESS "GRABSUCCESS")
(hash-table-set! syms GRAPHICSEXPOSE "GRAPHICSEXPOSE")
(hash-table-set! syms GRAVITYNOTIFY "GRAVITYNOTIFY")
(hash-table-set! syms GRAYSCALE "GRAYSCALE")
(hash-table-set! syms GXAND "GXAND")
(hash-table-set! syms GXANDINVERTED "GXANDINVERTED")
(hash-table-set! syms GXANDREVERSE "GXANDREVERSE")
(hash-table-set! syms GXCLEAR "GXCLEAR")
(hash-table-set! syms GXCOPY "GXCOPY")
(hash-table-set! syms GXCOPYINVERTED "GXCOPYINVERTED")
(hash-table-set! syms GXEQUIV "GXEQUIV")
(hash-table-set! syms GXINVERT "GXINVERT")
(hash-table-set! syms GXNAND "GXNAND")
(hash-table-set! syms GXNOOP "GXNOOP")
(hash-table-set! syms GXNOR "GXNOR")
(hash-table-set! syms GXOR "GXOR")
(hash-table-set! syms GXORINVERTED "GXORINVERTED")
(hash-table-set! syms GXORREVERSE "GXORREVERSE")
(hash-table-set! syms GXSET "GXSET")
(hash-table-set! syms GXXOR "GXXOR")
(hash-table-set! syms HEIGHTVALUE "HEIGHTVALUE")
(hash-table-set! syms HOSTDELETE "HOSTDELETE")
(hash-table-set! syms HOSTINSERT "HOSTINSERT")
(hash-table-set! syms ICONICSTATE "ICONICSTATE")
(hash-table-set! syms ICONMASKHINT "ICONMASKHINT")
(hash-table-set! syms ICONPIXMAPHINT "ICONPIXMAPHINT")
(hash-table-set! syms ICONPOSITIONHINT "ICONPOSITIONHINT")
(hash-table-set! syms ICONWINDOWHINT "ICONWINDOWHINT")
(hash-table-set! syms INACTIVESTATE "INACTIVESTATE")
(hash-table-set! syms INCLUDEINFERIORS "INCLUDEINFERIORS")
(hash-table-set! syms INPUTFOCUS "INPUTFOCUS")
(hash-table-set! syms INPUTHINT "INPUTHINT")
(hash-table-set! syms INPUTONLY "INPUTONLY")
(hash-table-set! syms INPUTOUTPUT "INPUTOUTPUT")
(hash-table-set! syms ISUNMAPPED "ISUNMAPPED")
(hash-table-set! syms ISUNVIEWABLE "ISUNVIEWABLE")
(hash-table-set! syms ISVIEWABLE "ISVIEWABLE")
(hash-table-set! syms JOINBEVEL "JOINBEVEL")
(hash-table-set! syms JOINMITER "JOINMITER")
(hash-table-set! syms JOINROUND "JOINROUND")
(hash-table-set! syms KBAUTOREPEATMODE "KBAUTOREPEATMODE")
(hash-table-set! syms KBBELLDURATION "KBBELLDURATION")
(hash-table-set! syms KBBELLPERCENT "KBBELLPERCENT")
(hash-table-set! syms KBBELLPITCH "KBBELLPITCH")
(hash-table-set! syms KBKEY "KBKEY")
(hash-table-set! syms KBKEYCLICKPERCENT "KBKEYCLICKPERCENT")
(hash-table-set! syms KBLED "KBLED")
(hash-table-set! syms KBLEDMODE "KBLEDMODE")
(hash-table-set! syms KEYMAPNOTIFY "KEYMAPNOTIFY")
(hash-table-set! syms KEYMAPSTATEMASK "KEYMAPSTATEMASK")
(hash-table-set! syms KEYPRESS "KEYPRESS")
(hash-table-set! syms KEYPRESSMASK "KEYPRESSMASK")
(hash-table-set! syms KEYRELEASE "KEYRELEASE")
(hash-table-set! syms KEYRELEASEMASK "KEYRELEASEMASK")
(hash-table-set! syms LASTEVENT "LASTEVENT")
(hash-table-set! syms LASTEXTENSIONERROR "LASTEXTENSIONERROR")
(hash-table-set! syms LEAVENOTIFY "LEAVENOTIFY")
(hash-table-set! syms LEAVEWINDOWMASK "LEAVEWINDOWMASK")
(hash-table-set! syms LEDMODEOFF "LEDMODEOFF")
(hash-table-set! syms LEDMODEON "LEDMODEON")
(hash-table-set! syms LINEDOUBLEDASH "LINEDOUBLEDASH")
(hash-table-set! syms LINEONOFFDASH "LINEONOFFDASH")
(hash-table-set! syms LINESOLID "LINESOLID")
(hash-table-set! syms LOCKMAPINDEX "LOCKMAPINDEX")
(hash-table-set! syms LOCKMASK "LOCKMASK")
(hash-table-set! syms LOWERHIGHEST "LOWERHIGHEST")
(hash-table-set! syms LSBFIRST "LSBFIRST")
(hash-table-set! syms MAPNOTIFY "MAPNOTIFY")
(hash-table-set! syms MAPPINGBUSY "MAPPINGBUSY")
(hash-table-set! syms MAPPINGFAILED "MAPPINGFAILED")
(hash-table-set! syms MAPPINGKEYBOARD "MAPPINGKEYBOARD")
(hash-table-set! syms MAPPINGMODIFIER "MAPPINGMODIFIER")
(hash-table-set! syms MAPPINGNOTIFY "MAPPINGNOTIFY")
(hash-table-set! syms MAPPINGPOINTER "MAPPINGPOINTER")
(hash-table-set! syms MAPPINGSUCCESS "MAPPINGSUCCESS")
(hash-table-set! syms MAPREQUEST "MAPREQUEST")
(hash-table-set! syms MOD1MAPINDEX "MOD1MAPINDEX")
(hash-table-set! syms MOD1MASK "MOD1MASK")
(hash-table-set! syms MOD2MAPINDEX "MOD2MAPINDEX")
(hash-table-set! syms MOD2MASK "MOD2MASK")
(hash-table-set! syms MOD3MAPINDEX "MOD3MAPINDEX")
(hash-table-set! syms MOD3MASK "MOD3MASK")
(hash-table-set! syms MOD4MAPINDEX "MOD4MAPINDEX")
(hash-table-set! syms MOD4MASK "MOD4MASK")
(hash-table-set! syms MOD5MAPINDEX "MOD5MAPINDEX")
(hash-table-set! syms MOD5MASK "MOD5MASK")
(hash-table-set! syms MOTIONNOTIFY "MOTIONNOTIFY")
(hash-table-set! syms MSBFIRST "MSBFIRST")
(hash-table-set! syms NOEVENTMASK "NOEVENTMASK")
(hash-table-set! syms NOEXPOSE "NOEXPOSE")
(hash-table-set! syms NONCONVEX "NONCONVEX")
(hash-table-set! syms NONE "NONE")
(hash-table-set! syms NORMALSTATE "NORMALSTATE")
(hash-table-set! syms NORTHEASTGRAVITY "NORTHEASTGRAVITY")
(hash-table-set! syms NORTHGRAVITY "NORTHGRAVITY")
(hash-table-set! syms NORTHWESTGRAVITY "NORTHWESTGRAVITY")
(hash-table-set! syms NOSYMBOL "NOSYMBOL")
(hash-table-set! syms NOTIFYANCESTOR "NOTIFYANCESTOR")
(hash-table-set! syms NOTIFYDETAILNONE "NOTIFYDETAILNONE")
(hash-table-set! syms NOTIFYGRAB "NOTIFYGRAB")
(hash-table-set! syms NOTIFYHINT "NOTIFYHINT")
(hash-table-set! syms NOTIFYINFERIOR "NOTIFYINFERIOR")
(hash-table-set! syms NOTIFYNONLINEAR "NOTIFYNONLINEAR")
(hash-table-set! syms NOTIFYNONLINEARVIRTUAL "NOTIFYNONLINEARVIRTUAL")
(hash-table-set! syms NOTIFYNORMAL "NOTIFYNORMAL")
(hash-table-set! syms NOTIFYPOINTER "NOTIFYPOINTER")
(hash-table-set! syms NOTIFYPOINTERROOT "NOTIFYPOINTERROOT")
(hash-table-set! syms NOTIFYUNGRAB "NOTIFYUNGRAB")
(hash-table-set! syms NOTIFYVIRTUAL "NOTIFYVIRTUAL")
(hash-table-set! syms NOTIFYWHILEGRABBED "NOTIFYWHILEGRABBED")
(hash-table-set! syms NOTUSEFUL "NOTUSEFUL")
(hash-table-set! syms NOVALUE "NOVALUE")
(hash-table-set! syms NULL "NULL")
(hash-table-set! syms NULLQUARK "NULLQUARK")
(hash-table-set! syms NULLSTRING "NULLSTRING")
(hash-table-set! syms OPPOSITE "OPPOSITE")
(hash-table-set! syms OWNERGRABBUTTONMASK "OWNERGRABBUTTONMASK")
(hash-table-set! syms PALLHINTS "PALLHINTS")
(hash-table-set! syms PARENTRELATIVE "PARENTRELATIVE")
(hash-table-set! syms PASPECT "PASPECT")
(hash-table-set! syms PLACEONBOTTOM "PLACEONBOTTOM")
(hash-table-set! syms PLACEONTOP "PLACEONTOP")
(hash-table-set! syms PMAXSIZE "PMAXSIZE")
(hash-table-set! syms PMINSIZE "PMINSIZE")
(hash-table-set! syms POINTERMOTIONHINTMASK "POINTERMOTIONHINTMASK")
(hash-table-set! syms POINTERMOTIONMASK "POINTERMOTIONMASK")
(hash-table-set! syms POINTERROOT "POINTERROOT")
(hash-table-set! syms POINTERWINDOW "POINTERWINDOW")
(hash-table-set! syms PPOSITION "PPOSITION")
(hash-table-set! syms PREFERBLANKING "PREFERBLANKING")
(hash-table-set! syms PRESIZEINC "PRESIZEINC")
(hash-table-set! syms PROPERTYCHANGEMASK "PROPERTYCHANGEMASK")
(hash-table-set! syms PROPERTYDELETE "PROPERTYDELETE")
(hash-table-set! syms PROPERTYNEWVALUE "PROPERTYNEWVALUE")
(hash-table-set! syms PROPERTYNOTIFY "PROPERTYNOTIFY")
(hash-table-set! syms PROPMODEAPPEND "PROPMODEAPPEND")
(hash-table-set! syms PROPMODEPREPEND "PROPMODEPREPEND")
(hash-table-set! syms PROPMODEREPLACE "PROPMODEREPLACE")
(hash-table-set! syms PSEUDOCOLOR "PSEUDOCOLOR")
(hash-table-set! syms PSIZE "PSIZE")
(hash-table-set! syms QUEUEDAFTERFLUSH "QUEUEDAFTERFLUSH")
(hash-table-set! syms QUEUEDAFTERREADING "QUEUEDAFTERREADING")
(hash-table-set! syms QUEUEDALREADY "QUEUEDALREADY")
(hash-table-set! syms RAISELOWEST "RAISELOWEST")
(hash-table-set! syms RECTANGLEIN "RECTANGLEIN")
(hash-table-set! syms RECTANGLEOUT "RECTANGLEOUT")
(hash-table-set! syms RECTANGLEPART "RECTANGLEPART")
(hash-table-set! syms REPARENTNOTIFY "REPARENTNOTIFY")
(hash-table-set! syms REPLAYKEYBOARD "REPLAYKEYBOARD")
(hash-table-set! syms REPLAYPOINTER "REPLAYPOINTER")
(hash-table-set! syms RESIZEREDIRECTMASK "RESIZEREDIRECTMASK")
(hash-table-set! syms RESIZEREQUEST "RESIZEREQUEST")
(hash-table-set! syms RETAINPERMANENT "RETAINPERMANENT")
(hash-table-set! syms RETAINTEMPORARY "RETAINTEMPORARY")
(hash-table-set! syms REVERTTONONE "REVERTTONONE")
(hash-table-set! syms REVERTTOPARENT "REVERTTOPARENT")
(hash-table-set! syms REVERTTOPOINTERROOT "REVERTTOPOINTERROOT")
(hash-table-set! syms SCREENSAVERACTIVE "SCREENSAVERACTIVE")
(hash-table-set! syms SCREENSAVERRESET "SCREENSAVERRESET")
(hash-table-set! syms SELECTIONCLEAR "SELECTIONCLEAR")
(hash-table-set! syms SELECTIONNOTIFY "SELECTIONNOTIFY")
(hash-table-set! syms SELECTIONREQUEST "SELECTIONREQUEST")
(hash-table-set! syms SETMODEDELETE "SETMODEDELETE")
(hash-table-set! syms SETMODEINSERT "SETMODEINSERT")
(hash-table-set! syms SHIFTMAPINDEX "SHIFTMAPINDEX")
(hash-table-set! syms SHIFTMASK "SHIFTMASK")
(hash-table-set! syms SOUTHEASTGRAVITY "SOUTHEASTGRAVITY")
(hash-table-set! syms SOUTHGRAVITY "SOUTHGRAVITY")
(hash-table-set! syms SOUTHWESTGRAVITY "SOUTHWESTGRAVITY")
(hash-table-set! syms STATEHINT "STATEHINT")
(hash-table-set! syms STATICCOLOR "STATICCOLOR")
(hash-table-set! syms STATICGRAVITY "STATICGRAVITY")
(hash-table-set! syms STATICGRAY "STATICGRAY")
(hash-table-set! syms STIPPLESHAPE "STIPPLESHAPE")
(hash-table-set! syms STRUCTURENOTIFYMASK "STRUCTURENOTIFYMASK")
(hash-table-set! syms SUBSTRUCTURENOTIFYMASK "SUBSTRUCTURENOTIFYMASK")
(hash-table-set! syms SUBSTRUCTUREREDIRECTMASK "SUBSTRUCTUREREDIRECTMASK")
(hash-table-set! syms SUCCESS "SUCCESS")
(hash-table-set! syms SYNCBOTH "SYNCBOTH")
(hash-table-set! syms SYNCKEYBOARD "SYNCKEYBOARD")
(hash-table-set! syms SYNCPOINTER "SYNCPOINTER")
(hash-table-set! syms TILESHAPE "TILESHAPE")
(hash-table-set! syms TOPIF "TOPIF")
(hash-table-set! syms TRUECOLOR "TRUECOLOR")
(hash-table-set! syms UNMAPGRAVITY "UNMAPGRAVITY")
(hash-table-set! syms UNMAPNOTIFY "UNMAPNOTIFY")
(hash-table-set! syms UNSORTED "UNSORTED")
(hash-table-set! syms USPOSITION "USPOSITION")
(hash-table-set! syms USSIZE "USSIZE")
(hash-table-set! syms VISIBILITYCHANGEMASK "VISIBILITYCHANGEMASK")
(hash-table-set! syms VISIBILITYFULLYOBSCURED "VISIBILITYFULLYOBSCURED")
(hash-table-set! syms VISIBILITYNOTIFY "VISIBILITYNOTIFY")
(hash-table-set! syms VISIBILITYPARTIALLYOBSCURED "VISIBILITYPARTIALLYOBSCURED")
(hash-table-set! syms VISIBILITYUNOBSCURED "VISIBILITYUNOBSCURED")
(hash-table-set! syms VISUALALLMASK "VISUALALLMASK")
(hash-table-set! syms VISUALBITSPERRGBMASK "VISUALBITSPERRGBMASK")
(hash-table-set! syms VISUALBLUEMASKMASK "VISUALBLUEMASKMASK")
(hash-table-set! syms VISUALCLASSMASK "VISUALCLASSMASK")
(hash-table-set! syms VISUALCOLORMAPSIZEMASK "VISUALCOLORMAPSIZEMASK")
(hash-table-set! syms VISUALDEPTHMASK "VISUALDEPTHMASK")
(hash-table-set! syms VISUALGREENMASKMASK "VISUALGREENMASKMASK")
(hash-table-set! syms VISUALIDMASK "VISUALIDMASK")
(hash-table-set! syms VISUALNOMASK "VISUALNOMASK")
(hash-table-set! syms VISUALREDMASKMASK "VISUALREDMASKMASK")
(hash-table-set! syms VISUALSCREENMASK "VISUALSCREENMASK")
(hash-table-set! syms WESTGRAVITY "WESTGRAVITY")
(hash-table-set! syms WHENMAPPED "WHENMAPPED")
(hash-table-set! syms WIDTHVALUE "WIDTHVALUE")
(hash-table-set! syms WINDINGRULE "WINDINGRULE")
(hash-table-set! syms WINDOWGROUPHINT "WINDOWGROUPHINT")
(hash-table-set! syms XCNOENT "XCNOENT")
(hash-table-set! syms XCNOMEM "XCNOMEM")
(hash-table-set! syms XCSUCCESS "XCSUCCESS")
(hash-table-set! syms XNEGATIVE "XNEGATIVE")
(hash-table-set! syms XRMBINDLOOSELY "XRMBINDLOOSELY")
(hash-table-set! syms XRMBINDTIGHTLY "XRMBINDTIGHTLY")
(hash-table-set! syms XRMOPTIONISARG "XRMOPTIONISARG")
(hash-table-set! syms XRMOPTIONNOARG "XRMOPTIONNOARG")
(hash-table-set! syms XRMOPTIONRESARG "XRMOPTIONRESARG")
(hash-table-set! syms XRMOPTIONSEPARG "XRMOPTIONSEPARG")
(hash-table-set! syms XRMOPTIONSKIPARG "XRMOPTIONSKIPARG")
(hash-table-set! syms XRMOPTIONSKIPLINE "XRMOPTIONSKIPLINE")
(hash-table-set! syms XRMOPTIONSTICKYARG "XRMOPTIONSTICKYARG")
(hash-table-set! syms XVALUE "XVALUE")
(hash-table-set! syms XYBITMAP "XYBITMAP")
(hash-table-set! syms XYPIXMAP "XYPIXMAP")
(hash-table-set! syms X_PROTOCOL "X_PROTOCOL")
(hash-table-set! syms X_PROTOCOL_REVISION "X_PROTOCOL_REVISION")
(hash-table-set! syms YNEGATIVE "YNEGATIVE")
(hash-table-set! syms YSORTED "YSORTED")
(hash-table-set! syms YVALUE "YVALUE")
(hash-table-set! syms YXBANDED "YXBANDED")
(hash-table-set! syms YXSORTED "YXSORTED")
(hash-table-set! syms ZOOMSTATE "ZOOMSTATE")
(hash-table-set! syms ZPIXMAP "ZPIXMAP")


(define *display* (xopendisplay #f))
(assert *display*)


(define (xtextproperty-make textp)
  (let ((tp (make-xtextproperty)))
    (set-xtextproperty-value! tp (location textp))
    (set-xtextproperty-encoding! tp XA_STRING)
    (set-xtextproperty-format! tp 32)
    (set-xtextproperty-nitems! tp 1)
    tp))

(define (window-property-set win key value)
  (xchangeproperty *display* win
                   (xinternatom *display* key 0)
                   (xinternatom *display* (property-type value) 0)
                   (property-format value)
                   PROPMODEREPLACE
                   (property-data value)
                   (property-count value)))

(define (window-property-append win key value)
  (xchangeproperty *display* win
                   (xinternatom *display* key 0)
                   (xinternatom *display* (property-type value) 0)
                   (property-format value)
                   PROPMODEAPPEND
                   (property-data value)
                   (property-count value)))

(define (set-struts win strut-callback)
  (xchangeproperty *display* win
                   (xinternatom *display* "_NET_WM_STRUT_PARTIAL" 0)
                   (xinternatom *display* "CARDINAL" 0)
                   32
                   PROPMODEREPLACE
                   (strut-callback)
                   12))

(define (make-atom-property atom-name)
  (let ((data (xinternatom *display* atom-name 0)))
    (let-location ((data unsigned-long data))
      (vector "ATOM" 32
              (location data)    
              1))))

(define (make-number-property number)
  (let-location ((data unsigned-long number))
    (vector "CARDINAL" 32 (location data) 1)))


(define (property-type property)
  (vector-ref property 0))
(define (property-format property)
  (vector-ref property 1))
(define (property-data property)
  (vector-ref property 2))
(define (property-count property)
  (vector-ref property 3))


(let* ((screen (xdefaultscreen *display*))
       (root (xrootwindow *display* screen))
       (swid (xdisplaywidth *display* screen))
       (shei (xdisplayheight *display* screen))
       (attr (make-xsetwindowattributes))
       (vis (make-visual)))
  (set-xsetwindowattributes-background_pixel! attr (xblackpixel *display* screen))
  (set-xsetwindowattributes-border_pixel! attr (xblackpixel *display* screen))
  (set-xsetwindowattributes-override_redirect! attr 1)
  (set-visual-class! vis COPYFROMPARENT)

  (let ((win (xcreatewindow
              *display* root
              0 0 swid 20 0
              (xdefaultdepth *display* screen)
              INPUTOUTPUT vis
              (bitwise-ior CWBACKPIXEL CWBORDERPIXEL CWOVERRIDEREDIRECT)
              attr)))
    (assert win)

    ;;;
    ;;; Window Properties
    ;;;
    (xstorename *display* win "jjfpanel")

    (let ((p (make-xtextproperty))
          (str (xtextproperty-make (get-host-name))))
      (xstringlisttotextproperty str 1 p)
      (xsetwmclientmachine *display* win p))

    (window-property-set win "_NET_WM_PID"
                         (make-number-property (current-process-id)))
    (window-property-set win "_NET_WM_WINDOW_TYPE"
                         (make-atom-property "_NET_WM_TYPE_DOCK"))
    (window-property-set win "_NET_WM_DESKTOP"
                         (make-number-property #xffffffff))
    (window-property-set win "_NET_WM_STATE"
                         (make-atom-property "_NET_WM_STATE_BELOW"))
    (window-property-append win "_NET_WM_STATE"
                            (make-atom-property "_NET_WM_STATE_STICKY"))
    (window-property-append win "_NET_WM_STATE"
                            (make-atom-property "_NET_WM_STATE_SKIP_TASKBAR"))
    (window-property-append win "_NET_WM_STATE"
                            (make-atom-property "_NET_WM_STATE_SKIP_PAGER"))

    (set-struts win
                (foreign-lambda* c-pointer ()
                  "unsigned long strut[12] = { 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0 };"
                  "return(strut);"))

    (xselectinput *display* win
                  (bitwise-ior
                   EXPOSUREMASK
                   BUTTONPRESSMASK
                   STRUCTURENOTIFYMASK))

    (let ((d-atom (xinternatom *display* "WM_DELETE_WINDOW" 1)))
      (let-location ((atm unsigned-long d-atom))
        (xsetwmprotocols *display* win (location atm) 1)))


    (let ((font (xloadfont *display* "-misc-fixed-bold-*-*-*-*-100-*-*-*-*-*-*")))
      (assert font)
      (let ((gc (xcreategc *display* win 0 #f))
            (event (make-xevent)))
        (xsetbackground *display* gc (xblackpixel *display* screen))
        (xsetforeground *display* gc (xwhitepixel *display* screen))
        (xsetfunction *display* gc GXCOPY)
        (xsetfont *display* gc font)

        (define (handleexpose)
          (let ((text "[j-e2,s,m-e267,lam-e23]"))
            (xdrawstring *display* win gc 10 18 text (string-length text))))

        (define (eventloop return)
          (xnextevent *display* event)
          (let ((type (xevent-type event)))
            (cond
             ((= type CLIENTMESSAGE)
              (display "closed!\n")
              (return #t))

             ((= type EXPOSE)
              (handleexpose)
              (display "expose\n"))

             ((= type BUTTONPRESS)
              (display "buttonpress\n")
              (return #t))

             (else
              (display "event ")
              (display (hash-table-ref syms (xevent-type event)))
              (display "\n"))))
          (eventloop return))

        (xmapwindow *display* win)
        (xnextevent *display* event)
        (handleexpose)
        (xflush *display*)
        (call/cc eventloop)))))

(xclosedisplay *display*)
